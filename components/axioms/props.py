old_label_pattern = '[a-zA-Z0-9_]*$'
dest_key_pattern = '[a-zA-Z0-9_].*(-[a-zA-Z0-9_].*)?'
label_pattern = '\\A[a-zA-Z0-9_]{2,128}\\Z'
invalid_label_pattern = '\\A[.]{2,128}\\Z'
name_gen_data = {
  'max_syllable_size': 4,
  'max_syllables': 9,
  'syllables': ['Aan','Aar','Aas','Aat','Ace','Ael','Af','Ag','Agl','Ah','Ahb','Ains','Air','Al','Ald','Amp','An','Ani','Ap','Ar','As','Ash','At','Atue','Aur','Aus','Ay','Baf','Bah','Bat','Be','Bel','Ber','Berd','Bes','Bi','Bito','Bo','Bor','Br','Bran','Bru','Ca','Car','Ch','Chor','Cig','Cka','Cl','Cla','Co','Ct','Cy','Da','Daal','Dah','De','Dec','Di','Diil','Diin','Diiv','Do','Doh','Don','Dor','Dov','Dr','Dre','Dreb','Drem','Drog','Dun','Dur','Durne','Ea','Eal','Ear','Eath','Ech','Ect','Eech','Eek','Eeze','Ef','Efo','Eg','Eive','El','Elen','Emen','En','Ence','End','Ength','Ent','Er','Es','Esh','Ess','Est','Eth','Ev','Fa','Faas','Fah','Fal','Fan','Far','Fe','Feg','Fen','Fer','Fi','Fiik','Fin','Fl','Fo','Fol','For','Fr','Free','Fu','Ful','Fum','Fury','Fus','Ga','Gaan','Gaar','Gahn','Gaith','Gar','Ge','Gen','Ght','Glen','Go','Gol','Gown','Gr','Grah','Gram','Gth','Gut','Ha','Haal','Haas','Hag','Hah','Harg','Hl','Ho','Hoth','Hun','Hvi','Hviir','Iance','Ic','Ice','Icka','Ies','Ig','Iid','Iik','Iil','Iing','Iirmu','Iiv','Ikiv','Ikrel','Im','In','Ind','Inex','Ing','Ion','Ir','Irl','It','Ite','Ity','Iv','Joor','Jot','Ka','Kaan','Kar','Ke','Kest','Ki','Klo','Koor','Kra','Krac','Krah','Krii','Krin','Krosu','Kruzi','Ky','Laan','Laar','Laas','Lag','Lap','Ld','Le','Lef','Leg','Lh','Lhah','Li','Lis','Ljo','Ll','Lle','Lo','Lok','Lol','Lon','Lor','Loy','Lrah','Lth','Lu','Lun','Ma','Maar','Mag','Mal','Mar','Me','Mey','Mez','Mi','Mich','Mid','Mil','Mir','Mm','Mmm','Mmon','Mo','Mor','Mori','Mul','Mun','Mus','Naak','Naas','Nah','Nahl','Nce','Nd','Ne','Ned','Neh','Ng','Ngth','Nic','Nin','Ning','Nir','Nirn','No','Nor','Nos','Nost','Nu','Num','Nus','Od','Oda','Odu','Of','Ok','Ol','Om','On','One','Ooal','Oor','Oos','Or','Orm','Os','Ost','Ov','Ow','Paar','Pack','Pah','Pal','Pe','Pen','Per','Ph','Phil','Po','Pos','Poy','Pres','Pu','Pus','Qah','Qo','Quas','Que','Ra','Rag','Ralt','Ram','Rary','Rce','Re','Ree','Ren','Rii','Riik','Rin','Ris','Rk','Rm','Rnax','Ro','Roh','Ron','Ror','Rot','Rth','Ru','Run','Ry','Sa','Sah','Se','See','Ser','Sh','Shaa','Sho','Shul','Sit','Sk','Sl','Slen','Sm','Sma','Sn','So','Sp','Spi','Spor','St','Str','Su','Sur','Taar','Tah','Tal','Tar','Tas','Te','Tem','Temp','Ten','Ter','Th','Thu','Tii','Ting','Tle','To','Toa','Ton','Toor','Tra','Treb','Tred','Tsu','Tue','Turu','Uin','Ul','Uld','Un','Und','Unr','Uns','Ust','Uul','Uun','Vaaz','Vah','Vak','Val','Ven','Ver','Viik','Viin','Viir','Vit','Voi','Vos','Vul','Vur','Vus','We','Web','Wh','Whis','Wi','Wil','Win','Wra','Wuld','Wy','Wyv','Yah','Yal','Yo','Yol','Yor','Yrm','Zaa','Zah','Ze','Zef','Zell','Zii','Zul','Zun',],
  'vowels': ['a','e','i','o','u','y'],
  'consonants': ['c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','z'],
  # 'vowels': ['ɑ','ʉ','ʊ','ɵ','ɞ','ɒ','ɯ','ɤ','ʌ','ɔ','o','u','ɘ','ə','ɜ','ɐ','ɪ','ɛ','æ','ʏ','œ','ɶ','e','ø'],
  # 'consonants': ['b','d','f','k','m','n','p','r','t','v','ç','ð','ŋ','ɖ','ɟ','ɡ','ɣ','ɬ','ɭ','ɮ','ɰ','ɱ','ɲ','ɳ','ɸ','ɹ','ɻ','ɽ','ɾ','ʁ','ʂ','ʃ','ʈ','ʋ','ʎ','ʐ','ʒ','ʔ','ʙ','ʝ','ʟ','β','θ','χ','ⱱ'],
  'vowel_pattern': '[aieouyAIEOUY]',
  'connectors': ['of_the','from_the','by_the','within_the','the','of','from','by','in','von','mu',''],
  'adjectives': ['abrupt','acidic','adorable','adventurous','aggressive','agitated','alert','aloof','amiable','amused','annoyed','antsy','anxious','appalling','appetizing','apprehensive','arrogant','ashamed','astonishing','attractive','average','batty','beefy','bewildered','biting','bitter','bland','blushing','bored','brave','bright','broad','bulky','burly','charming','cheeky','cheerful','chubby','clean','clear','cloudy','clueless','clumsy','colorful','colossal','combative','comfortable','condemned','condescending','confused','contemplative','convincing','convoluted','cooperative','corny','costly','courageous','crabby','creepy','crooked','cruel','cumbersome','curved','cynical','dangerous','dashing','decayed','deceitful','deep','defeated','defiant','delicious','delightful','depraved','depressed','despicable','determined','dilapidated','diminutive','disgusted','distinct','distraught','distressed','disturbed','dizzy','drab','drained','dull','eager','ecstatic','elated','elegant','emaciated','embarrassed','enchanting','encouraging','energetic','enormous','enthusiastic','envious','exasperated','excited','exhilarated','extensive','exuberant','fancy','fantastic','fierce','filthy','flat','floppy','fluttering','foolish','frantic','fresh','friendly','frightened','frothy','frustrating','funny','fuzzy','gaudy','gentle','ghastly','giddy','gigantic','glamorous','gleaming','glorious','gorgeous','graceful','greasy','grieving','gritty','grotesque','grubby','grumpy','handsome','happy','harebrained','healthy','helpful','helpless','high','hollow','homely','horrific','huge','hungry','hurt','icy','ideal','immense','impressionable','intrigued','irate','irritable','itchy','jealous','jittery','jolly','joyous','filthy','flat','floppy','fluttering','foolish','frantic','fresh','friendly','frightened','frothy','frustrating','funny','fuzzy','gaudy','gentle','ghastly','giddy','gigantic','glamorous','gleaming','glorious','gorgeous','graceful','greasy','grieving','gritty','grotesque','grubby','grumpy','handsome','happy','harebrained','healthy','helpful','helpless','high','hollow','homely','horrific','huge','hungry','hurt','icy','ideal','immense','impressionable','intrigued','irate','irritable','itchy','jealous','jittery','jolly','joyous','juicy','jumpy','kind','lackadaisical','large','lazy','lethal','little','lively','livid','lonely','loose','lovely','lucky','ludicrous','macho','magnificent','mammoth','maniacal','massive','melancholy','melted','miniature','minute','mistaken','misty','moody','mortified','motionless','muddy','mysterious','narrow','nasty','naughty','nervous','nonchalant','nonsensical','nutritious','nutty','obedient','oblivious','obnoxious','odd','old-fashioned','outrageous','panicky','perfect','perplexed','petite','petty','plain','pleasant','poised','pompous','precious','prickly','proud','pungent','puny','quaint','quizzical','ratty','reassured','relieved','repulsive','responsive','ripe','robust','rotten','rotund','rough','round','salty','sarcastic','scant','scary','scattered','scrawny','selfish','shaggy','shaky','shallow','sharp','shiny','short','silky','silly','skinny','slimy','slippery','small','smarmy','smiling','smoggy','smooth','smug','soggy','solid','sore','sour','sparkling','spicy','splendid','spotless','square','stale','steady','steep','responsive','sticky','stormy','stout','straight','strange','strong','stunning','substantial','successful','succulent','superficial','superior','swanky','sweet','tart','tasty','teeny','tender','tense','terrible','testy','thankful','thick','thoughtful','thoughtless','tight','timely','tricky','trite','troubled','twitter pated','uneven','unsightly','upset','uptight','vast','vexed','victorious','virtuous','vivacious','vivid','wacky','weary','whimsical','whopping','wicked','witty','wobbly','wonderful','worried','yummy','zany','zealous','zippy'],
  'iffices': ['Barbarian', 'Battler', 'Black', 'Blue', 'Bold', 'Boy', 'Brave', 'Brown', 'City', 'Civilized', 'Cloaked', 'Coast', 'Cruel', 'Daring', 'East', 'Eighteenth', 'Eighth', 'Eleventh', 'Fair', 'Fearless', 'Fifteenth', 'Fifth', 'First', 'Foul', 'Fourteen', 'Fourth', 'Gentle', 'Girl', 'Great', 'Green', 'Hills', 'Hooded', 'Loathsome', 'Loud', 'Lovely', 'Merciful', 'Merciless', 'Mighty', 'Mountains', 'Mysterious', 'Nineteenth', 'Nineth', 'North', 'Old', 'Plains', 'Quick', 'Quiet', 'Red', 'Robed', 'Second', 'Seventeenth', 'Seventh', 'Silent', 'Sixteenth', 'Sixth', 'Slow', 'South', 'Steady', 'Tenth', 'Third', 'Thirteenth', 'Traveller', 'Twelf', 'Twentieth', 'Unexpected', 'Unknown', 'Unready', 'Wanderer', 'West', 'Woods', 'Yellow', 'Young', 'Zeroeth']
}
directions_pattern = '\\A[ABS]{1,3}\\Z'

# def f5(seq,idfun=None): 
#   # random interbuts functino
#    # order preserving
#    if idfun is None:
#        def idfun(x): return x
#    seen = {}
#    result = []
#    for item in seq:
#        marker = idfun(item)
#        # in old Python versions:
#        # if seen.has_key(marker)
#        # but in new ones:
#        if marker in seen: continue
#        seen[marker] = 1
#        result.append(item)
#    return result